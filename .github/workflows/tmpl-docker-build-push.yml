name: Docker Build and Push

on:
  workflow_call:
    inputs:
      registry:
        required: true
        type: string
      username:
        required: true
        type: string
      image:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      waitFor:
        required: false
        type: string
    secrets:
      password:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for ${{ inputs.waitFor }}
        uses: lewagon/wait-on-check-action@v1.2.0
        if: ${{ inputs.waitFor }} != ""
        with:
          ref: ${{ github.ref }}
          check-name: ${{ inputs.waitFor }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ inputs.registry }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.username }}
          password: ${{ secrets.password }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.registry }}/${{ inputs.image }}
          tags: |
            type=schedule,pattern=weekly
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest,enable={{ is_default_branch }}
            type=raw,value=testing,enable=${{ github.event_name == 'pull_request' }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64,linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
