name: Docker Build and Push

on:
  workflow_call:
    inputs:
      image:
        description: Name of image to build and push
        required: true
        type: string
      dockerfile:
        description: Dockerfile to build and push
        required: true
        type: string
      platforms:
        description: Platforms to build images for
        required: false
        default: linux/amd64 #,linux/arm64
        type: string
    secrets:
      registry:
        description: Registry to use for authentication and pushing
        required: true
      username:
        description: Username of user for registry authentication
        required: true
      password:
        description: Password of user for registry authentication
        required: true
      sshPriv:
        description: SSH private key file
        required: false
      sshPub:
        description: SSH public key file
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Pull SSH secrets from Vault
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.zhr.one
          role: kasm-images
          path: github
          method: jwt
          jwtGithubAudience: sigstore
          secrets: |
            /ci-cd/kasm-images/ssh SSH_PRIV_KEY ;
            /ci-cd/kasm-images/ssh SSH_PUB_KEY

      - name: Save SSH keys
        run: 'mkdir private && echo "$SSH_PRIV_KEY" > private/id_rsa && echo "$SSH_PUB_KEY" > private/id_rsa.pub'
        shell: bash

      - name: Pull ACR secrets from Vault
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.zhr.one
          role: kasm-images
          path: github
          method: jwt
          # jwtGithubAudience: sigstore
          secrets: |
            /ci-cd/kasm-images/acr ACR_ENDPOINT ;
            /ci-cd/kasm-images/acr ACR_USERNAME ;
            /ci-cd/kasm-images/acr ACR_PASSWORD

      - name: Log into registry ${{ env.ACR_ENDPOINT }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ACR_ENDPOINT }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.ACR_ENDPOINT }}/${{ inputs.image }}
          tags: |
            type=schedule,pattern=weekly
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=latest,enable={{ is_default_branch }}
            type=raw,value=testing,enable=${{ github.event_name == 'pull_request' }}

      - name: Build ${{ inputs.image }} image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
